
#This is autogenerated, don't modify it you'll lost your mods...

url = "http://localhost"
port = 10000

import requests
import json

def send_http(cmd, data):
    _r = {}
    _r["sended"] = False

    full_url = f"{url}:{port}/{cmd}"
    try:
        response = requests.post(full_url, json=data)
        response.raise_for_status()  # Raise error for bad HTTP status codes
        _r["sended"] = True
        data = {}
        try : 
            data = json.loads(response.text)
        except : 
            _r["success"] = False
            _r["error"] = "Can't parse the response as a JSON"
            _r["response"] = response.text
            _r["status"] = response.status_code

        if not data : 
            return _r

        for k in data : 
            _r[k] = data[k]
        
    except requests.RequestException as e:
        _r["error"] = str(e)
    return _r


def demo(opt={}):
    data = {}
    for k in opt:
        data[k] = opt[k]
    return send_http("demo", data)

def message(message, opt={}):
    data = {}
    data["message"] = message
    for k in opt:
        data[k] = opt[k]
    return send_http("message", data)

def infos(message, opt={}):
    data = {}
    data["message"] = message
    for k in opt:
        data[k] = opt[k]
    return send_http("infos", data)

def warning(message, opt={}):
    data = {}
    data["message"] = message
    for k in opt:
        data[k] = opt[k]
    return send_http("warning", data)

def error(message, opt={}):
    data = {}
    data["message"] = message
    for k in opt:
        data[k] = opt[k]
    return send_http("error", data)

def confirm(message, opt={}):
    data = {}
    data["message"] = message
    for k in opt:
        data[k] = opt[k]
    return send_http("confirm", data)

def set_dialog(id, opt={}):
    data = {}
    data["id"] = id
    for k in opt:
        data[k] = opt[k]
    return send_http("set-dialog", data)

def work(message, opt={}):
    data = {}
    data["message"] = message
    for k in opt:
        data[k] = opt[k]
    return send_http("work", data)

def progress(message, opt={}):
    data = {}
    data["message"] = message
    for k in opt:
        data[k] = opt[k]
    return send_http("progress", data)